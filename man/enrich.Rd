% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/enrich_osm.R
\name{enrich}
\alias{enrich}
\alias{enrich_osm}
\alias{data_enrichment}
\alias{measure_matrix}
\alias{control_enrich}
\title{Enrich \code{sf} object with OSM data}
\usage{
enrich_osm(
  dataset,
  name = NULL,
  key = NULL,
  value = NULL,
  type = "points",
  measure = "spherical",
  r = NULL,
  kernel = "uniform",
  reduce_fun = sum,
  control = list(),
  exact_distance = TRUE,
  .verbose = TRUE,
  ...
)

data_enrichment(ref_data, query, colname, .verbose, r, exact_distance)

measure_matrix(
  measure_name,
  measure_fun,
  ref_geometry,
  ftr_geometry,
  r,
  exact_distance
)

control_enrich(timeout = 300, memsize = 1073741824)
}
\arguments{
\item{dataset}{target \code{sf} dataset to enrich with this package}

\item{name}{the column name of the feature to be added}

\item{key}{target OSM feature key to add, see \code{\link[osmdata:add_osm_feature]{osmdata::add_osm_feature()}}}

\item{value}{target value for OSM feature key to add, see
\code{\link[osmdata:add_osm_feature]{osmdata::add_osm_feature()}}}

\item{type}{\code{character} the osm feature type or types to consider
(e.g., points, polygons), see details}

\item{measure}{\code{character} the measure metric used, see details}

\item{r}{The search radius used by the \code{kernel} function.}

\item{kernel}{\code{function} the kernel function used, see details}

\item{reduce_fun}{The aggregation function used by the \code{kernel} function to
aggregate the retrieved data objects}

\item{control}{The list with configuration variables for the OSRM server.
It contains \code{timeout}, defining the number of seconds before the request
to OSRM times out, and \code{memsize}, defining the maximum size of the query to
OSRM.}

\item{exact_distance}{\code{bool} whether to use exact distances or euclidean distances
(much faster but give small differences in the kernel estimation)}

\item{.verbose}{\code{bool} whether to print info during enrichment}

\item{...}{Additional parameters to be passed into the OSM query, such as
a user-defined kernel.}
}
\description{
Perform enriched query on OSM and add as new column.
}
\details{
\code{Type} represents the feature type to be considered. Usually this
would be points, but polygons and multipolygons are also possible. This
argument can also be a vector of multiple types. Non-point types will be
converted to points using the \code{st_centroid} function from the \code{sf} package
(NB this does not necessarily work well for all features!).
Available options are:
\itemize{
\item points
\item lines
\item polygons
\item multilines
\item multipolygons
}

\code{Measure} represents the metric used to compute the distances or durations
between the rows in the dataset and the OSM features. The following metrics
are available in this package, assuming that the OSRM server is setup as
suggested in our guide at:
https://github.com/sodascience/osmenrich_docker:
\itemize{
\item spherical
\item distance_by_foot
\item duration_by_foot
\item distance_by_car
\item duration_by_car
\item distance_by_bike
\item duration_by_bike
}

\code{Kernel} indicates the kernel function from the \code{osmenrich} package to be
used to weight the objects retrieved by their distances (or durations) from
the reference objects and then convert these vectors into single numbers.
The simplest kernel allows the user to count the number of occurrences
of reference objects within a radius \code{r} and is called \code{kernel_uniform}.

For more details see the introductory vignette of \code{osmenrich}:
\code{vignette("introduction", package = "osmenrich")}
}
\note{
If you want to get a large number of objects make sure to set the
\code{.timeout} (time before request times out) and \code{.memsize} (maxmimum
size of the request) arguments for the Overpass server and set
the "max-table-size" argument correctly when starting the
OSRM server(s).
}
\examples{
\dontrun{
# Load libraries
library(tidyverse)
library(sf)

# Create example dataset
sf_example <-
tribble(
  ~person,  ~lat,   ~lon,
  "Alice",  52.12,  5.09,
  "Bob",    52.13,  5.08,
  ) \%>\%
  sf::st_as_sf(
  coords = c("lon", "lat"),
  crs = 4326
 )

# Enrich data creating new column `waste_baskets`
sf_enriched <- sf_example \%>\%
  enrich_osm(
    name = "n_waste_baskets",
    key = "amenity",
    value = "waste_basket",
    reduce_fun = sum
  )
}

}
\seealso{
\code{\link[=enrich_opq]{enrich_opq()}}
}
\keyword{internal}
